name: Release Pipeline
on:
  # push:
  #   tags:
  #     - 'v*'
  release:
    types:
      - created
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Download asset
        uses: fabriciobastian/download-release-asset-action@v1.0.6
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_PAT }}
        with:
          version: latest
          repository: dhadkara/node-sample-rest
          file: release-${{ github.event.release.tag_name }}.zip
          out: ./
      - name: Decompress
        uses: TonyBogdanov/zip@1.0
        with:
            args: unzip -qq ./release*.zip -d ./
      - name: Configure variables
        shell: bash
        id: check
        run: |
          # Set variables
          ls -ltr
      # - name: Setup node 12
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: 12.x
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Configure variables
        shell: bash
        id: vars
        env:
          REPO: ${{ github.repository }}
          HASH: ${{ github.sha }}
          REF: ${{ github.ref }}
        run: |
          # Set variables
          BRANCH=${REF#refs/heads/}
          REPOSITORY=`echo $REPO | tr "/" "-"`
          ENVIRONMENT=$BRANCH-$REPOSITORY-${{ secrets.AWS_REGION }}
          # In this step we are setting variables and persistenting them
          # into the environment so that they can be utilized in other steps
          echo "::set-output name=branch::$BRANCH"
          echo "::set-output name=repository::$REPOSITORY"
          echo "::set-output name=environment::$ENVIRONMENT"
          # Output variables to ensure their values are set correctly when ran
          echo "The region is ${{ secrets.AWS_REGION }}"
          echo "The repository is $REPOSITORY"
          echo "The environment is $ENVIRONMENT"
          echo "The branch is $BRANCH"
      - name: Prod Deploy
        run: |
          # Run SAM Deploy
          sam deploy --template-file packaged.yaml \
            --stack-name ${{ steps.vars.outputs.environment }} \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM
